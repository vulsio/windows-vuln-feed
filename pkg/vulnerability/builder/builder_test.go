package builder

import (
	"testing"

	"github.com/google/go-cmp/cmp"
	"github.com/google/go-cmp/cmp/cmpopts"

	"github.com/vulsio/windows-vuln-feed/pkg/vulnerability/model"
)

func TestBuild(t *testing.T) {
	var tests = []struct {
		in       []string
		expected []model.Vulnerability
	}{
		{
			in: []string{"./testdata/bulletin", "./testdata/cvrf"},
			expected: []model.Vulnerability{
				{
					CVEID: "CVE-2022-22008",
					Title: "Windows Hyper-V Remote Code Execution Vulnerability",
					Products: []model.Product{
						{
							ProductID: "11571",
							Name:      "Windows Server 2019",
							Impact:    "Remote Code Execution",
							Severity:  "Critical",
							ScoreSet: &model.ScoreSet{
								BaseScore:     "7.8",
								TemporalScore: "6.8",
								Vector:        "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H/E:U/RL:O/RC:C",
							},
							KBs: []model.KB{
								{
									Article:         "5012647",
									RestartRequired: "Yes",
									SubType:         "Security Update",
									FixedBuild:      "10.0.17763.2803",
									ArticleURL:      "https://support.microsoft.com/help/5012647",
									DownloadURL:     "https://catalog.update.microsoft.com/v7/site/Search.aspx?q=KB5012647",
								},
							},
						},
					},
					URL: "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2022-22008",
					Revisions: []model.Revision{
						{
							Number:      "1.0",
							Date:        "2022-04-12T07:00:00",
							Description: "\u003cp\u003eInformation published.\u003c/p\u003e\n",
						},
					},
				},
			},
		},
	}

	for i, tt := range tests {
		got, err := Build(tt.in)
		if err != nil {
			t.Errorf("[%d] unexpected error has occurred. err: %s", i, err)
		}
		opts := []cmp.Option{
			cmpopts.SortSlices(func(i, j model.Vulnerability) bool {
				return i.CVEID < j.CVEID
			}),
		}
		if diff := cmp.Diff(tt.expected, got, opts...); diff != "" {
			t.Errorf("[%d] failed to Build(). (-expected +got):\n%s", i, diff)
		}
	}
}
